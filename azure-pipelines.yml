
trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: sonarQubeServiceConnection
    value: 'SonarQube'
  - name: buildConfiguration
    value: 'Release'

stages:
- stage: Build
  displayName: 'Build and Test'
  jobs:
  - job: BuildAndTest
    displayName: 'Build and Test Job'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - script: |
        npm ci
      displayName: 'Install dependencies'

    - script: |
        npm run build
      displayName: 'Build application'

    - script: |
        npm run test -- --coverage --watchAll=false
      displayName: 'Run tests with coverage'
      continueOnError: true

    - task: SonarQubePrepare@5
      inputs:
        SonarQube: '$(sonarQubeServiceConnection)'
        scannerMode: 'CLI'
        configMode: 'file'
      displayName: 'Prepare SonarQube analysis'

    - task: SonarQubeAnalyze@5
      displayName: 'Run SonarQube analysis'

    - task: SonarQubePublish@5
      inputs:
        pollingTimeoutSec: '300'
      displayName: 'Publish SonarQube results'

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/test-results.xml'
        failTaskOnFailedTests: false
      displayName: 'Publish test results'
      condition: succeededOrFailed()

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: 'coverage/cobertura-coverage.xml'
        reportDirectory: 'coverage'
      displayName: 'Publish code coverage'
      condition: succeededOrFailed()
